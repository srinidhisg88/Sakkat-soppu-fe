function n(n){if("number"==typeof n&&Number.isFinite(n)&&!(n<=0)){if(n>=1e3){const t=n/1e3,o=Number.isInteger(t)?t.toString():t.toFixed(1);return"".concat(o," kg")}return"".concat(Math.round(n)," g")}}function t(t){const o=(null!=t?t:"").toString().trim();if(!o)return;if(/\bkg\b/i.test(o))return o;const r=o.match(/(\d+(?:\.\d+)?)\s*g\b/i);if(r){const t=n(parseFloat(r[1]));if(t)return o.replace(r[0],t)}return o}function o(o){const{unitLabel:r,g:e,pieces:c}=o,i=t(null!=r?r:void 0);if(i)return i;const u=n(null!=e?e:void 0);return u||("number"==typeof c&&c>0?"".concat(c," piece").concat(1===c?"":"s"):void 0)}function r(o,r){const{g:e,unitLabel:c}=r,i=n(null!=e?e:void 0);if(i)return"".concat(o," for ").concat(i);const u=t(null!=c?c:void 0);return u?"".concat(o," for ").concat(u):void 0}export{r as a,o as d,n as f};
